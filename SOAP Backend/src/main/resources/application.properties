
###############################################
### APPLICATION CONNECTIVITY CONFIGURATIONS ###
###############################################

# Use when working in Docker; 'mysql' is the name of the MySQL Docker image
database.ip = ${MYSQL_IP:mysql}
# Use when testing locally, outside Docker
# database.ip = ${MYSQL_IP:localhost}

database.port = ${MYSQL_PORT:3306}
database.person = ${MYSQL_USER:root}
database.password = ${MYSQL_PASSWORD:root}
database.name = ${MYSQL_DBNAME:medical-platform}


#############################################
### SPRING CONFIGURATIONS FOR THE DATABASE ###
##############################################
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:mysql://${database.ip}:${database.port}/${database.name}?allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username = ${database.person}
spring.datasource.password = ${database.password}

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Expecting this to break a bunch of stuff, but it's good for performance - ask Vlad Mihalcea
spring.jpa.open-in-view = false

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

# Sql queries logging
logging.level.org.hibernate.SQL=DEBUG

# server.port=8080 # TODO: do we need this?